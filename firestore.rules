service cloud.firestore {
  match /databases/{database}/documents {

    match /invitations/{document=**} {
      allow read: if true;
    }
    
    match /{document=**} {
      allow read, write: if request.auth.uid != null;
    }

    match /users/{userId} {
      allow write: if request.auth.uid == userId;
    }

  }
}


// service cloud.firestore {

//   match /databases/{database}/documents {
  
//     match /groups/{groupId} {
//         // Make sure a 'users' document exists for the requesting user before
//         // allowing any writes to the 'cities' collection
//         allow create: if exists(/databases/$(database)/documents/users/$(request.auth.uid))

//         // Make sure a the user is a member of the project 
//         allow read, write: if resource.data.users[request.auth.uid].isMember==true;

//         // Allow the user to delete projects if the user is an admin
//         allow delete: if resource.data.users[request.auth.uid].role=='admin';
//       }  

//     match /users/{document=**} {
//       allow write: if request.auth.uid == resource.data.uid;
//       allow read: if request.auth.uid != null
//     }

//     match /invitations/{document=**} {
//       allow read: if true;
//       allow write: if true;
//     }
//   }
// }
